/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PostView as PrismaPostView } from "@prisma/client";

export class PostViewServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PostViewCountArgs, "select">): Promise<number> {
    return this.prisma.postView.count(args);
  }

  async postViews(
    args: Prisma.PostViewFindManyArgs
  ): Promise<PrismaPostView[]> {
    return this.prisma.postView.findMany(args);
  }
  async postView(
    args: Prisma.PostViewFindUniqueArgs
  ): Promise<PrismaPostView | null> {
    return this.prisma.postView.findUnique(args);
  }
  async createPostView(
    args: Prisma.PostViewCreateArgs
  ): Promise<PrismaPostView> {
    return this.prisma.postView.create(args);
  }
  async updatePostView(
    args: Prisma.PostViewUpdateArgs
  ): Promise<PrismaPostView> {
    return this.prisma.postView.update(args);
  }
  async deletePostView(
    args: Prisma.PostViewDeleteArgs
  ): Promise<PrismaPostView> {
    return this.prisma.postView.delete(args);
  }
}
